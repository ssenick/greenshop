@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
@import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройки шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================
// Colors
@import "colors";
// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "CeraPro";
$fontSize: rem(14); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: $text; // Цвет шрифта по умолчанию

// Настройки адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1440;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1200;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 48;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(413.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнуление ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";
// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================

body {
	background-color: $bg-main;
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}
	.lg-on & {
	}
	// Сайт загружен
	.loaded & {
	}
}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
#bg {
	position: fixed;
	width: 100vw;
	height: 100vh;
	z-index: -1;
	pointer-events: none;
	opacity: 0.2;
}
.wrapper {
	position: relative;
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;

	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
	.page {
		min-width: 0;
		padding-top: rem(90);
		@media (max-width: $tablet) {
			padding-top: rem(80);
		}
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 100, 30);
		}
		// .page_product-view
		&_product-view {
		}
		&__main {
			&:not(:last-child) {
				&:not(:last-child) {
					@include adaptiveValue("margin-bottom", 46, 30);
				}
			}
		}
		&__catalog {
			&:not(:last-child) {
				@include adaptiveValue("margin-bottom", 90, 30);
			}
		}
		// .page__banners
		&__banners {
			&:not(:last-child) {
				@include adaptiveValue("margin-bottom", 120, 30);
			}
		}
		// .page__blog-post
		&__blog-post {
		}
		// .page__breadcrumb
		&__breadcrumb {
		}
		//=================================
		// .page__product-view
		&__product-view {
			&:not(:last-child) {
				@include adaptiveValue("margin-bottom", 94, 20);
			}
		}
		// .page__about-product
		&__about-product {
			&:not(:last-child) {
				@include adaptiveValue("margin-bottom", 127, 20);
			}
		}
		// .page__releted-products
		&__releted-products {
		}
		// .page__product-cart
		&__product-cart {
			&:not(:last-child) {
				@include adaptiveValue("margin-bottom", 87, 20);
			}
		}
		// .page__checkout
		&__checkout {
		}
	}
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
			@media (max-width: $mobileSmall) {
				padding: 0 rem(15);
			}
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

.transition {
	display: flex;
	position: fixed;
	z-index: 101;
	height: 100vh;
	width: 100%;
	top: 0;
	left: 0;
	pointer-events: none;
	background-color: $green-main;



	span {
		transform: scaleY(0);
		background-color: $green-main;
		width: 21%;
		&:nth-child(2) {
			background: $green-main url("@img/logo_white.svg") -47% 50% / 200% no-repeat;
		}
		&:nth-child(3) {
			background: $green-main url("@img/logo_white.svg") 50% 50% / 200% no-repeat;
		}
		&:nth-child(4) {
			background: $green-main url("@img/logo_white.svg") 150% 50% / 200% no-repeat;
		}
		@media (max-width: $mobile) {
			&:nth-child(1) {
				background: $green-main url("@img/logo_white.svg") -15% 50% / 400% no-repeat;
			}
			&:nth-child(2) {
				background: $green-main url("@img/logo_white.svg") 18% 50% / 400% no-repeat;
			}
			&:nth-child(3) {
				background: $green-main url("@img/logo_white.svg") 51.8% 50% / 400% no-repeat;
			}
			&:nth-child(4) {
				background: $green-main url("@img/logo_white.svg") 85% 50% / 400% no-repeat;
			}
			&:nth-child(5) {
				background: $green-main url("@img/logo_white.svg") 118.5% 50% / 400% no-repeat;
			}
		}
	}
	.loaded & {
		background-color: transparent;
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home-page";
@import "product-page";
@import "product-cart-page";
@import "product-checkout-page";
//=================================
@keyframes toRightFromLeft {
	49% {
		transform: translate(100%);
	}
	50% {
		opacity: 0;
		transform: translate(-100%);
	}
	51% {
		opacity: 1;
	}
}
//=================================
